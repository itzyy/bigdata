##<!-- ========================== 自定义输出格式说明================================ -->
##<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
##<!-- %r 输出自应用启动到输出该log信息耗费的毫秒数 -->
##<!-- %c 输出所属的类目，通常就是所在类的全名 -->
##<!-- %t 输出产生该日志事件的线程名 -->
##<!-- %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” -->
##<!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd ##HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 -->
##<!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) -->
##<!-- ========================================================================== -->

### set log levels ###

#默认logger
#INFO,stdout 是指允许info或者以上的级别的日志输出 并以stdout对应的方式输出
log4j.rootLogger=INFO,stdout

#自定义logger
log4j.logger.flume=INFO,flume

log4j.appender.flume=org.apache.flume.clients.log4jappender.Log4jAppender
log4j.appender.flume.layout=org.apache.log4j.PatternLayout
log4j.appender.flume.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
log4j.appender.flume.Hostname=192.168.239.12
log4j.appender.flume.Port=41414
log4j.appender.flume.UnsafeMode = true


### stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n

